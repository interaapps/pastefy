export const LANG_REPLACEMENTS = {
  md: 'markdown',
  js: 'javascript',
  jsx: 'javascript',
  jsm: 'javascript',
  mjs: 'javascript',
  cjs: 'javascript',
  ts: 'typescript',
  tsm: 'typescript',
  mts: 'typescript',
  cts: 'typescript',
  tsx: 'typescript',
  html: 'xml',
  svg: 'xml',
  htm: 'xml',
  xhtml: 'xml',
  iml: 'xml',
  vue: 'xml',
  yml: 'yaml',
  py: 'python',
  css: 'scss',
  less: 'scss',
  sass: 'scss',
  cs: 'csharp',
  env: 'properties',
  txt: 'text',
  h: 'c',
  ino: 'c',
  go: 'go',
  rs: 'rust',
  php: 'php',
  sh: 'shell',
  bat: 'powershell',
  ps1: 'powershell',
  kt: 'kotlin',
  kts: 'kotlin',
  ktm: 'kotlin',
  rb: 'ruby',
  lock: 'json',
  twig: 'xml',
  zsh: 'shell',
  asm: 'x86asm',
  proto: 'protobuf',
  mmd: 'yaml',
  mermaid: 'yaml',
  ics: 'wren',
  cast: 'json',
} as Record<string, string>

const fileNameReplacements = {
  '.codebox': 'json',
  Dockerfile: 'dockerfile',
  Makefile: 'makefile',
  'CMakeLists.txt': 'cmake',
  Rakefile: 'ruby',
  Gemfile: 'ruby',
  Vagrantfile: 'ruby',
  Podfile: 'ruby',
  'Podfile.lock': 'ruby',
  Jenkinsfile: 'groovy',
  Pipfile: 'toml',
  'Pipfile.lock': 'toml',
  'Cargo.lock': 'toml',
  'go.mod': 'go',
  'go.sum': 'go',
  'build.gradle': 'groovy',
  'build.gradle.kts': 'kotlin',
  'settings.gradle': 'groovy',
  'settings.gradle.kts': 'kotlin',
  gradlew: 'shell',
  'yarn.lock': 'yaml',
} as Record<string, string>

export function findFromFileName(fileName: string): string | undefined {
  if (fileName in fileNameReplacements) return fileNameReplacements[fileName]

  const ext = fileName.split('.').pop()!
  return LANG_REPLACEMENTS[ext] ?? ext
}
